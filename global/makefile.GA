# Global Array library (shared and distributed memory version)
#
# Type "make libglobal.a" to create the GA library
#      "make test.x"      to create a test program for GA 
#      "make patch.x"     to create a test program for patch ops in GA 
#      "make testsolve.x" to create a test program for linear equation solver 
#                         based on LU factorization
#      "make testeig.x"   to create a test program for GA eigensolver,
#                         matrix multiply, and symmetrization 
#      "make perform.x"   to create a program testing performance of GA
#                         primitives: get, put & accumulate,
#      "make testc.x"     to create a C test program for GA 
#      "make ga-mpi.x"    to create a C test program for GA that demonstrates
#                         the interface to MPI 
#      "make clean"       clean
#
# All programs are built in ./testing subdirectory. 
# TARGET might be one of:
#      SUN, SGI, SGITFP, IBM, DECOSF, KSR, SP1, CRAY-T3D, IPSC, DELTA, PARAGON
#
#........................................................................


# default version and target (to be overwritten on command line)
CUR_TARGET  =
CUR_VERSION =

# to be able to use parallel eigensolver and linear equation solver define 
# DIAG = PAR  &  LU_SOLVE = PAR

DIAG =
LU_SOLVE =

#do you want tracing ? [YES/NO]
#
GA_TRACE = 

ifndef TARGET 
       TARGET = $(CUR_TARGET)
endif


   LIBRARY = libglobal.a
   TESTS   = test.x testeig.x jacobi.x testsolve.x patch.x perform.x testc.x\
             ga-mpi.x


export DIAG TARGET VERSION LU_SOLVE GA_TRACE

.PHONY: $(LIBRARY)

$(LIBRARY): 
	(echo TARGET is $(TARGET); cd ./src; $(MAKE) all || exit 1;) 

$(TESTS):	$(LIBRARY)
	(cd ./testing; $(MAKE) $@  || exit 1;)

all: $(TESTS)

clean:
	$(RM) *.a events *.o core
	(cd ./src; $(MAKE) clean)
	(cd ./testing; $(MAKE) realclean)
	(cd ./trace; $(MAKE) clean)
	(cd ./X; $(MAKE) clean)
